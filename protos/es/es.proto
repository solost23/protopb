syntax = "proto3";

//import "google/protobuf/any.proto";

package go_interface.es;
option go_package = "github.com/solost23/protopb/gen/go/protos/es";

import "protos/common/common.proto";

service Search {
  // 搜索
  rpc Search(SearchRequest) returns(SearchResponse);
  // 文档创建(自动创建index)
  rpc Create(CreateRequest) returns(CreateResponse);
  // 删除
  rpc Delete(DeleteRequest) returns(DeleteResponse);
}

message termQuery {
  string field = 1;
  string value = 2;
}

message matchQuery {
  string field = 1;
  string value = 2;
}

message multiMatchQuery {
  repeated string field = 1;
  string value = 2;
}

message rangeQuery {
  string field = 1;
  string gt = 2;
  string lt = 3;
  string gte = 4;
  string lte = 5;
}

message query {
  // 精确查找
  repeated termQuery termQueries = 1;
  // 单字段全文模糊匹配
  repeated matchQuery matchQueries = 2;
  // 多字段全文模糊匹配
  repeated multiMatchQuery multiMatchQueries = 3;
  // 范围查询
  repeated rangeQuery rangeQueries = 4;
}

message sort {
  string field = 1;
  // true: 升序
  bool ascending = 2;
}

message SearchRequest {
  common.requestHeader header = 1;
  // 搜索条件
  // 必须全匹配
  query mustQuery = 2;
  // 必须全不匹配
  query mustNotQuery = 3;
  // 有一个条件匹配则匹配
  query shouldQuery = 4;
  // 索引名称列表
  repeated string indices = 5;
  // 排序列表
  repeated sort sort = 6;
  // 当前页
  int32 page = 7;
  // 页长
  int32 size = 8;
  // 是否返回json格式
  bool pretty = 9;
}

message pageList {
  int32 size = 1;
  int64 pages = 2;
  int64 total = 3;
  int32 current = 4;
}

message SearchResponse {
  common.errorInfo errorInfo = 1;
  pageList pageList = 2;
  repeated string records = 3;
}

message CreateRequest {
  common.requestHeader header = 1;
  string documentId = 2;
  string index = 3;
  string document = 4;
}

message CreateResponse {
  common.errorInfo errorInfo = 1;
}

message DeleteRequest {
  common.requestHeader header = 1;
  string index = 2;
  string documentId = 3;
}

message DeleteResponse {
  common.errorInfo errorInfo = 1;
}