syntax = "proto3";

package order_machine;
option go_package = "github.com/solost23/protopb/gen/go/order_machine";

import "common/common.proto";

service OrderMachineService {
  // 创建订单
  rpc CreateOrder(CreateOrderRequest) returns(CreateOrderResponse);
  // 订单列表
  rpc ListOrder(ListOrderRequest) returns(ListOrderResponse);
  // 订单状态流转
  rpc SwitchOrderState(SwitchOrderStateRequest) returns(SwitchOrderStateResponse);
}

enum OrderSource {
  App = 0;
  Web = 1;
  SmallProgram = 2;
}

enum OrderPayWay {
  AliPay = 0;
  WeChat = 1;
  OnlineBank = 2;
}

message CreateOrderRequest {
  common.RequestHeader header = 1;
  repeated sint32 courseIds = 2;
  repeated sint32 courseNums = 3;
  OrderSource orderSource = 4;
  OrderPayWay orderPayWay = 5;
}

message CreateOrderResponse {
  common.ErrorInfo errorInfo = 1;
  sint32 orderId = 2;
}

message ListOrderRequest {
  common.RequestHeader header = 1;
}

message DetailOrder {
  sint32 orderId = 1;
  sint32 orderStatus = 2;
  repeated OrderEvent orderEvents = 3;
}

message ListOrderResponse {
  common.ErrorInfo errorInfo = 1;
  repeated DetailOrder records = 2;
}

enum OrderEvent {
  // 创建订单
  EventCreate = 0;
  // 确定订单
  EventConfirm = 1;
  // 修改订单
  EventModify = 2;
  // 支付订单
  EventPay = 3;
  // 发送订单
  EventSend = 4;
  // 用户收货
  EventAccept = 5;
  // 用户评价
  EventEvaluation = 6;
  // 用户申请退款
  EventRefundAccept = 7;
  // 用户取消退款
  EventRefundCancel = 8;
  // 后台同意退款
  EventRefundConfirm = 9;
  // 后台拒绝退款
  EventRefundReject = 10;
}

enum OrderStatus {
  // 默认
  StatusDefault = 0;
  // 已预定
  StatusReserved = 10;
  // 待支付
  StatusWaitPayment = 20;
  // 已支付，待发货
  StatusAlreadyPaymentWaitSendGoods = 30;
  // 待收货
  StatusWaitAcceptGoods = 40;
  // 待评价
  StatusWaitEvaluation = 50;
  // 已评价，订单完成
  StatusAlreadyEvaluationOrderOver = 60;
  // 待退款，审核中
  StatusWaitRefundChecking = 70;
  // 退款成功
  StatusRefundSuccess = 80;
  // 退款失败
  StatusRefundFailed = 90;
}

message SwitchOrderStateRequest {
  common.RequestHeader header = 1;
  sint32 orderId = 2;
  OrderEvent orderEvent = 3;
  string refundAcceptIntroduce = 4;
  string evaluation = 5;
}

message SwitchOrderStateResponse {
  common.ErrorInfo errorInfo = 1;
  sint32 orderId = 2;
  OrderStatus orderStatus = 3;
}
