# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protos.face_recognition import face_recognition_pb2 as protos_dot_face__recognition_dot_face__recognition__pb2


class faceRecognitionStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GenerateFaceEncoding = channel.unary_unary(
                '/go_interface.face_recognition.faceRecognition/GenerateFaceEncoding',
                request_serializer=protos_dot_face__recognition_dot_face__recognition__pb2.GenerateFaceEncodingRequest.SerializeToString,
                response_deserializer=protos_dot_face__recognition_dot_face__recognition__pb2.GenerateFaceEncodingResponse.FromString,
                )
        self.CompareFaces = channel.unary_unary(
                '/go_interface.face_recognition.faceRecognition/CompareFaces',
                request_serializer=protos_dot_face__recognition_dot_face__recognition__pb2.CompareFacesRequest.SerializeToString,
                response_deserializer=protos_dot_face__recognition_dot_face__recognition__pb2.CompareFacesResponse.FromString,
                )


class faceRecognitionServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GenerateFaceEncoding(self, request, context):
        """批量生成人像编码
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompareFaces(self, request, context):
        """对比人像库，返回符合条件人列表的第一个符合人UserID & true, 若没有符合人，那么直接返回false
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_faceRecognitionServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GenerateFaceEncoding': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateFaceEncoding,
                    request_deserializer=protos_dot_face__recognition_dot_face__recognition__pb2.GenerateFaceEncodingRequest.FromString,
                    response_serializer=protos_dot_face__recognition_dot_face__recognition__pb2.GenerateFaceEncodingResponse.SerializeToString,
            ),
            'CompareFaces': grpc.unary_unary_rpc_method_handler(
                    servicer.CompareFaces,
                    request_deserializer=protos_dot_face__recognition_dot_face__recognition__pb2.CompareFacesRequest.FromString,
                    response_serializer=protos_dot_face__recognition_dot_face__recognition__pb2.CompareFacesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'go_interface.face_recognition.faceRecognition', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class faceRecognition(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GenerateFaceEncoding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/go_interface.face_recognition.faceRecognition/GenerateFaceEncoding',
            protos_dot_face__recognition_dot_face__recognition__pb2.GenerateFaceEncodingRequest.SerializeToString,
            protos_dot_face__recognition_dot_face__recognition__pb2.GenerateFaceEncodingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CompareFaces(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/go_interface.face_recognition.faceRecognition/CompareFaces',
            protos_dot_face__recognition_dot_face__recognition__pb2.CompareFacesRequest.SerializeToString,
            protos_dot_face__recognition_dot_face__recognition__pb2.CompareFacesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
