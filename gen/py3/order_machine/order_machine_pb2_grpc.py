# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from order_machine import order_machine_pb2 as order__machine_dot_order__machine__pb2


class OrderMachineServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateOrder = channel.unary_unary(
                '/order_machine.OrderMachineService/CreateOrder',
                request_serializer=order__machine_dot_order__machine__pb2.CreateOrderRequest.SerializeToString,
                response_deserializer=order__machine_dot_order__machine__pb2.CreateOrderResponse.FromString,
                )
        self.ListOrder = channel.unary_unary(
                '/order_machine.OrderMachineService/ListOrder',
                request_serializer=order__machine_dot_order__machine__pb2.ListOrderRequest.SerializeToString,
                response_deserializer=order__machine_dot_order__machine__pb2.ListOrderResponse.FromString,
                )
        self.SwitchOrderState = channel.unary_unary(
                '/order_machine.OrderMachineService/SwitchOrderState',
                request_serializer=order__machine_dot_order__machine__pb2.SwitchOrderStateRequest.SerializeToString,
                response_deserializer=order__machine_dot_order__machine__pb2.SwitchOrderStateResponse.FromString,
                )


class OrderMachineServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateOrder(self, request, context):
        """创建订单
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOrder(self, request, context):
        """订单列表
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SwitchOrderState(self, request, context):
        """订单状态流转
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrderMachineServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrder,
                    request_deserializer=order__machine_dot_order__machine__pb2.CreateOrderRequest.FromString,
                    response_serializer=order__machine_dot_order__machine__pb2.CreateOrderResponse.SerializeToString,
            ),
            'ListOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOrder,
                    request_deserializer=order__machine_dot_order__machine__pb2.ListOrderRequest.FromString,
                    response_serializer=order__machine_dot_order__machine__pb2.ListOrderResponse.SerializeToString,
            ),
            'SwitchOrderState': grpc.unary_unary_rpc_method_handler(
                    servicer.SwitchOrderState,
                    request_deserializer=order__machine_dot_order__machine__pb2.SwitchOrderStateRequest.FromString,
                    response_serializer=order__machine_dot_order__machine__pb2.SwitchOrderStateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'order_machine.OrderMachineService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OrderMachineService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/order_machine.OrderMachineService/CreateOrder',
            order__machine_dot_order__machine__pb2.CreateOrderRequest.SerializeToString,
            order__machine_dot_order__machine__pb2.CreateOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/order_machine.OrderMachineService/ListOrder',
            order__machine_dot_order__machine__pb2.ListOrderRequest.SerializeToString,
            order__machine_dot_order__machine__pb2.ListOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SwitchOrderState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/order_machine.OrderMachineService/SwitchOrderState',
            order__machine_dot_order__machine__pb2.SwitchOrderStateRequest.SerializeToString,
            order__machine_dot_order__machine__pb2.SwitchOrderStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
